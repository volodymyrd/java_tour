// SonarLint
plugins {
    id "name.remal.sonarlint" version "1.4.0"
}

defaultTasks 'clean', 'build'

subprojects {
    apply plugin: "java-library"
    apply plugin: "name.remal.sonarlint"

    ext {
        versions = [
                assertj    : '3.21.0',
                junit      : '5.8.1',
                guava      : '30.1.1-jre',
                spring_boot: '2.5.4',
        ]

        libs = [:]

        libs.guava = ["com.google.guava:guava:${versions.guava}"]

        libs.test = ["org.assertj:assertj-core:${versions.assertj}",
                     "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
                     "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
                     "org.junit.jupiter:junit-jupiter-params:${versions.junit}",]

        libs.spring_boot_starter = ["org.springframework.boot:spring-boot-starter:${versions.spring_boot}"]

        libs.spring_test = ["org.springframework.boot:spring-boot-starter-test:${versions.spring_boot}"]

        libs.spring_boot_web_starter = ["org.springframework.boot:spring-boot-starter-web:${versions.spring_boot}"]
    }

    sourceCompatibility = targetCompatibility = 1.8

    compileJava {
        options.encoding = "UTF-8"
    }

    compileTestJava {
        options.encoding = "UTF-8"
    }

    repositories {
        mavenCentral()
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '7.2'
    }

    test {
        useJUnitPlatform()

        testLogging {
            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    println "Results: " +
                            "${result.resultType} (${result.testCount} tests, " +
                            "${result.successfulTestCount} successes, ${result.failedTestCount} failures, " +
                            "${result.skippedTestCount} skipped)"
                }
            }
        }
    }
}
